package cpp.Absyn; // Java Package generated by the BNF Converter.

public class While extends Statement {
  public  Expr expr_;
  public  Statement statement_;
  public boolean was_for=false;

  public While(Expr p1, Statement p2) { expr_ = p1; statement_ = p2; }

  public <R,A> R accept(cpp.Absyn.Statement.Visitor<R,A> v, A arg) { return v.visit(this, arg); }

  public boolean equals(Object o) {
    if (this == o) return true;
    if (o instanceof cpp.Absyn.While) {
      cpp.Absyn.While x = (cpp.Absyn.While)o;
      return this.expr_.equals(x.expr_) && this.statement_.equals(x.statement_);
    }
    return false;
  }

  public int _hashCode() {
    return 37*(this.expr_.hashCode())+this.statement_.hashCode();
  }


}
